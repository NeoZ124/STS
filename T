import cv2
import numpy as np
import tflite_runtime.interpreter as tflite

# Load the TFLite model
interpreter = tflite.Interpreter(model_path="lite-model_ssd_mobilenet_v1_1_metadata_2.tflite")
interpreter.allocate_tensors()

# Get input and output tensor details
input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

# Open webcam
cap = cv2.VideoCapture(0)

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break
    
    # Resize and normalize image
    input_shape = input_details[0]['shape']
    resized = cv2.resize(frame, (input_shape[1], input_shape[2]))
    input_data = np.expand_dims(resized, axis=0).astype(np.float32) / 255.0
    
    # Run inference
    interpreter.set_tensor(input_details[0]['index'], input_data)
    interpreter.invoke()

    # Get detection results
    output_data = interpreter.get_tensor(output_details[0]['index'])
    
    # (You would need to process the output_data to draw bounding boxes, etc.)

    cv2.imshow("Trash Detection", frame)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

cap.release()
cv2.destroyAllWindows()
